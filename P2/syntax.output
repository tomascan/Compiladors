Gramática

    0 $accept: calculator $end

    1 calculator: instructions

    2 instructions: instructions instruction
    3             | instruction

    4 instruction: ARITHMETIC_ID ASIGN arithmetic_exp INTRO
    5            | array_exp
    6            | arithmetic_exp INTRO
    7            | setup DO INTRO instructions DONE INTRO

    8 array_exp: array_declaration
    9          | array_assignment
   10          | array_access
   11          | ARRAY_ID INTRO

   12 array_declaration: ARITHMETIC_ID ASIGN LBRACKET VAR RBRACKET INTRO

   13 array_assignment: ARRAY_ID LBRACKET VAR RBRACKET ASIGN arithmetic_exp INTRO
   14                 | ARRAY_ID LBRACKET ARITHMETIC_ID RBRACKET ASIGN arithmetic_exp INTRO

   15 array_access: ARRAY_ID LBRACKET VAR RBRACKET INTRO

   16 setup: REPEAT arithmetic_exp

   17 arithmetic_exp: arithmetic_exp arithmetic_op1 mul
   18               | SUB VAR
   19               | SUB ARITHMETIC_ID
   20               | mul
   21               | TO_INT POPEN arithmetic_exp PCLOSE
   22               | TO_FLOAT POPEN arithmetic_exp PCLOSE

   23 mul: mul arithmetic_op2 pow
   24    | pow

   25 pow: pow POW basic_exp
   26    | basic_exp

   27 basic_exp: ARITHMETIC_ID
   28          | POPEN arithmetic_exp PCLOSE
   29          | VAR

   30 arithmetic_op1: ADD
   31               | SUB

   32 arithmetic_op2: MUL
   33               | DIV
   34               | MOD


Terminales con las reglas donde aparecen

    $end (0) 0
    error (256)
    ASIGN (258) 4 12 13 14
    POPEN (259) 21 22 28
    PCLOSE (260) 21 22 28
    DO (261) 7
    DONE (262) 7
    LBRACKET (263) 12 13 14 15
    RBRACKET (264) 12 13 14 15
    TO_INT (265) 21
    TO_FLOAT (266) 22
    ADD <var> (267) 30
    SUB <var> (268) 18 19 31
    MUL <var> (269) 32
    DIV <var> (270) 33
    POW <var> (271) 25
    MOD <var> (272) 34
    VAR <var> (273) 12 13 15 18 29
    ARITHMETIC_ID <var> (274) 4 12 14 19 27
    ARRAY_ID <var> (275) 11 13 14 15
    INTRO <var> (276) 4 6 7 11 12 13 14 15
    REPEAT <var> (277) 16


No terminales con las reglas donde aparecen

    $accept (23)
        on left: 0
    calculator <var> (24)
        on left: 1
        on right: 0
    instructions <var> (25)
        on left: 2 3
        on right: 1 2 7
    instruction <var> (26)
        on left: 4 5 6 7
        on right: 2 3
    array_exp <var> (27)
        on left: 8 9 10 11
        on right: 5
    array_declaration <var> (28)
        on left: 12
        on right: 8
    array_assignment <var> (29)
        on left: 13 14
        on right: 9
    array_access <var> (30)
        on left: 15
        on right: 10
    setup <var> (31)
        on left: 16
        on right: 7
    arithmetic_exp <var> (32)
        on left: 17 18 19 20 21 22
        on right: 4 6 13 14 16 17 21 22 28
    mul <var> (33)
        on left: 23 24
        on right: 17 20 23
    pow <var> (34)
        on left: 25 26
        on right: 23 24 25
    basic_exp <var> (35)
        on left: 27 28 29
        on right: 25 26
    arithmetic_op1 <var> (36)
        on left: 30 31
        on right: 17
    arithmetic_op2 <var> (37)
        on left: 32 33 34
        on right: 23


Estado 0

    0 $accept: • calculator $end

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 6
    ARRAY_ID       desplazar e ir al estado 7
    REPEAT         desplazar e ir al estado 8

    calculator         ir al estado 9
    instructions       ir al estado 10
    instruction        ir al estado 11
    array_exp          ir al estado 12
    array_declaration  ir al estado 13
    array_assignment   ir al estado 14
    array_access       ir al estado 15
    setup              ir al estado 16
    arithmetic_exp     ir al estado 17
    mul                ir al estado 18
    pow                ir al estado 19
    basic_exp          ir al estado 20


Estado 1

   28 basic_exp: POPEN • arithmetic_exp PCLOSE

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 22
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 2

   21 arithmetic_exp: TO_INT • POPEN arithmetic_exp PCLOSE

    POPEN  desplazar e ir al estado 23


Estado 3

   22 arithmetic_exp: TO_FLOAT • POPEN arithmetic_exp PCLOSE

    POPEN  desplazar e ir al estado 24


Estado 4

   18 arithmetic_exp: SUB • VAR
   19               | SUB • ARITHMETIC_ID

    VAR            desplazar e ir al estado 25
    ARITHMETIC_ID  desplazar e ir al estado 26


Estado 5

   29 basic_exp: VAR •

    $default  reduce usando la regla 29 (basic_exp)


Estado 6

    4 instruction: ARITHMETIC_ID • ASIGN arithmetic_exp INTRO
   12 array_declaration: ARITHMETIC_ID • ASIGN LBRACKET VAR RBRACKET INTRO
   27 basic_exp: ARITHMETIC_ID •

    ASIGN  desplazar e ir al estado 27

    $default  reduce usando la regla 27 (basic_exp)


Estado 7

   11 array_exp: ARRAY_ID • INTRO
   13 array_assignment: ARRAY_ID • LBRACKET VAR RBRACKET ASIGN arithmetic_exp INTRO
   14                 | ARRAY_ID • LBRACKET ARITHMETIC_ID RBRACKET ASIGN arithmetic_exp INTRO
   15 array_access: ARRAY_ID • LBRACKET VAR RBRACKET INTRO

    LBRACKET  desplazar e ir al estado 28
    INTRO     desplazar e ir al estado 29


Estado 8

   16 setup: REPEAT • arithmetic_exp

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 30
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 9

    0 $accept: calculator • $end

    $end  desplazar e ir al estado 31


Estado 10

    1 calculator: instructions •
    2 instructions: instructions • instruction

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 6
    ARRAY_ID       desplazar e ir al estado 7
    REPEAT         desplazar e ir al estado 8

    $default  reduce usando la regla 1 (calculator)

    instruction        ir al estado 32
    array_exp          ir al estado 12
    array_declaration  ir al estado 13
    array_assignment   ir al estado 14
    array_access       ir al estado 15
    setup              ir al estado 16
    arithmetic_exp     ir al estado 17
    mul                ir al estado 18
    pow                ir al estado 19
    basic_exp          ir al estado 20


Estado 11

    3 instructions: instruction •

    $default  reduce usando la regla 3 (instructions)


Estado 12

    5 instruction: array_exp •

    $default  reduce usando la regla 5 (instruction)


Estado 13

    8 array_exp: array_declaration •

    $default  reduce usando la regla 8 (array_exp)


Estado 14

    9 array_exp: array_assignment •

    $default  reduce usando la regla 9 (array_exp)


Estado 15

   10 array_exp: array_access •

    $default  reduce usando la regla 10 (array_exp)


Estado 16

    7 instruction: setup • DO INTRO instructions DONE INTRO

    DO  desplazar e ir al estado 33


Estado 17

    6 instruction: arithmetic_exp • INTRO
   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul

    ADD    desplazar e ir al estado 34
    SUB    desplazar e ir al estado 35
    INTRO  desplazar e ir al estado 36

    arithmetic_op1  ir al estado 37


Estado 18

   20 arithmetic_exp: mul •
   23 mul: mul • arithmetic_op2 pow

    MUL  desplazar e ir al estado 38
    DIV  desplazar e ir al estado 39
    MOD  desplazar e ir al estado 40

    $default  reduce usando la regla 20 (arithmetic_exp)

    arithmetic_op2  ir al estado 41


Estado 19

   24 mul: pow •
   25 pow: pow • POW basic_exp

    POW  desplazar e ir al estado 42

    $default  reduce usando la regla 24 (mul)


Estado 20

   26 pow: basic_exp •

    $default  reduce usando la regla 26 (pow)


Estado 21

   27 basic_exp: ARITHMETIC_ID •

    $default  reduce usando la regla 27 (basic_exp)


Estado 22

   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul
   28 basic_exp: POPEN arithmetic_exp • PCLOSE

    PCLOSE  desplazar e ir al estado 43
    ADD     desplazar e ir al estado 34
    SUB     desplazar e ir al estado 35

    arithmetic_op1  ir al estado 37


Estado 23

   21 arithmetic_exp: TO_INT POPEN • arithmetic_exp PCLOSE

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 44
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 24

   22 arithmetic_exp: TO_FLOAT POPEN • arithmetic_exp PCLOSE

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 45
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 25

   18 arithmetic_exp: SUB VAR •

    $default  reduce usando la regla 18 (arithmetic_exp)


Estado 26

   19 arithmetic_exp: SUB ARITHMETIC_ID •

    $default  reduce usando la regla 19 (arithmetic_exp)


Estado 27

    4 instruction: ARITHMETIC_ID ASIGN • arithmetic_exp INTRO
   12 array_declaration: ARITHMETIC_ID ASIGN • LBRACKET VAR RBRACKET INTRO

    POPEN          desplazar e ir al estado 1
    LBRACKET       desplazar e ir al estado 46
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 47
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 28

   13 array_assignment: ARRAY_ID LBRACKET • VAR RBRACKET ASIGN arithmetic_exp INTRO
   14                 | ARRAY_ID LBRACKET • ARITHMETIC_ID RBRACKET ASIGN arithmetic_exp INTRO
   15 array_access: ARRAY_ID LBRACKET • VAR RBRACKET INTRO

    VAR            desplazar e ir al estado 48
    ARITHMETIC_ID  desplazar e ir al estado 49


Estado 29

   11 array_exp: ARRAY_ID INTRO •

    $default  reduce usando la regla 11 (array_exp)


Estado 30

   16 setup: REPEAT arithmetic_exp •
   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul

    ADD  desplazar e ir al estado 34
    SUB  desplazar e ir al estado 35

    $default  reduce usando la regla 16 (setup)

    arithmetic_op1  ir al estado 37


Estado 31

    0 $accept: calculator $end •

    $default  aceptar


Estado 32

    2 instructions: instructions instruction •

    $default  reduce usando la regla 2 (instructions)


Estado 33

    7 instruction: setup DO • INTRO instructions DONE INTRO

    INTRO  desplazar e ir al estado 50


Estado 34

   30 arithmetic_op1: ADD •

    $default  reduce usando la regla 30 (arithmetic_op1)


Estado 35

   31 arithmetic_op1: SUB •

    $default  reduce usando la regla 31 (arithmetic_op1)


Estado 36

    6 instruction: arithmetic_exp INTRO •

    $default  reduce usando la regla 6 (instruction)


Estado 37

   17 arithmetic_exp: arithmetic_exp arithmetic_op1 • mul

    POPEN          desplazar e ir al estado 1
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    mul        ir al estado 51
    pow        ir al estado 19
    basic_exp  ir al estado 20


Estado 38

   32 arithmetic_op2: MUL •

    $default  reduce usando la regla 32 (arithmetic_op2)


Estado 39

   33 arithmetic_op2: DIV •

    $default  reduce usando la regla 33 (arithmetic_op2)


Estado 40

   34 arithmetic_op2: MOD •

    $default  reduce usando la regla 34 (arithmetic_op2)


Estado 41

   23 mul: mul arithmetic_op2 • pow

    POPEN          desplazar e ir al estado 1
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    pow        ir al estado 52
    basic_exp  ir al estado 20


Estado 42

   25 pow: pow POW • basic_exp

    POPEN          desplazar e ir al estado 1
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    basic_exp  ir al estado 53


Estado 43

   28 basic_exp: POPEN arithmetic_exp PCLOSE •

    $default  reduce usando la regla 28 (basic_exp)


Estado 44

   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul
   21               | TO_INT POPEN arithmetic_exp • PCLOSE

    PCLOSE  desplazar e ir al estado 54
    ADD     desplazar e ir al estado 34
    SUB     desplazar e ir al estado 35

    arithmetic_op1  ir al estado 37


Estado 45

   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul
   22               | TO_FLOAT POPEN arithmetic_exp • PCLOSE

    PCLOSE  desplazar e ir al estado 55
    ADD     desplazar e ir al estado 34
    SUB     desplazar e ir al estado 35

    arithmetic_op1  ir al estado 37


Estado 46

   12 array_declaration: ARITHMETIC_ID ASIGN LBRACKET • VAR RBRACKET INTRO

    VAR  desplazar e ir al estado 56


Estado 47

    4 instruction: ARITHMETIC_ID ASIGN arithmetic_exp • INTRO
   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul

    ADD    desplazar e ir al estado 34
    SUB    desplazar e ir al estado 35
    INTRO  desplazar e ir al estado 57

    arithmetic_op1  ir al estado 37


Estado 48

   13 array_assignment: ARRAY_ID LBRACKET VAR • RBRACKET ASIGN arithmetic_exp INTRO
   15 array_access: ARRAY_ID LBRACKET VAR • RBRACKET INTRO

    RBRACKET  desplazar e ir al estado 58


Estado 49

   14 array_assignment: ARRAY_ID LBRACKET ARITHMETIC_ID • RBRACKET ASIGN arithmetic_exp INTRO

    RBRACKET  desplazar e ir al estado 59


Estado 50

    7 instruction: setup DO INTRO • instructions DONE INTRO

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 6
    ARRAY_ID       desplazar e ir al estado 7
    REPEAT         desplazar e ir al estado 8

    instructions       ir al estado 60
    instruction        ir al estado 11
    array_exp          ir al estado 12
    array_declaration  ir al estado 13
    array_assignment   ir al estado 14
    array_access       ir al estado 15
    setup              ir al estado 16
    arithmetic_exp     ir al estado 17
    mul                ir al estado 18
    pow                ir al estado 19
    basic_exp          ir al estado 20


Estado 51

   17 arithmetic_exp: arithmetic_exp arithmetic_op1 mul •
   23 mul: mul • arithmetic_op2 pow

    MUL  desplazar e ir al estado 38
    DIV  desplazar e ir al estado 39
    MOD  desplazar e ir al estado 40

    $default  reduce usando la regla 17 (arithmetic_exp)

    arithmetic_op2  ir al estado 41


Estado 52

   23 mul: mul arithmetic_op2 pow •
   25 pow: pow • POW basic_exp

    POW  desplazar e ir al estado 42

    $default  reduce usando la regla 23 (mul)


Estado 53

   25 pow: pow POW basic_exp •

    $default  reduce usando la regla 25 (pow)


Estado 54

   21 arithmetic_exp: TO_INT POPEN arithmetic_exp PCLOSE •

    $default  reduce usando la regla 21 (arithmetic_exp)


Estado 55

   22 arithmetic_exp: TO_FLOAT POPEN arithmetic_exp PCLOSE •

    $default  reduce usando la regla 22 (arithmetic_exp)


Estado 56

   12 array_declaration: ARITHMETIC_ID ASIGN LBRACKET VAR • RBRACKET INTRO

    RBRACKET  desplazar e ir al estado 61


Estado 57

    4 instruction: ARITHMETIC_ID ASIGN arithmetic_exp INTRO •

    $default  reduce usando la regla 4 (instruction)


Estado 58

   13 array_assignment: ARRAY_ID LBRACKET VAR RBRACKET • ASIGN arithmetic_exp INTRO
   15 array_access: ARRAY_ID LBRACKET VAR RBRACKET • INTRO

    ASIGN  desplazar e ir al estado 62
    INTRO  desplazar e ir al estado 63


Estado 59

   14 array_assignment: ARRAY_ID LBRACKET ARITHMETIC_ID RBRACKET • ASIGN arithmetic_exp INTRO

    ASIGN  desplazar e ir al estado 64


Estado 60

    2 instructions: instructions • instruction
    7 instruction: setup DO INTRO instructions • DONE INTRO

    POPEN          desplazar e ir al estado 1
    DONE           desplazar e ir al estado 65
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 6
    ARRAY_ID       desplazar e ir al estado 7
    REPEAT         desplazar e ir al estado 8

    instruction        ir al estado 32
    array_exp          ir al estado 12
    array_declaration  ir al estado 13
    array_assignment   ir al estado 14
    array_access       ir al estado 15
    setup              ir al estado 16
    arithmetic_exp     ir al estado 17
    mul                ir al estado 18
    pow                ir al estado 19
    basic_exp          ir al estado 20


Estado 61

   12 array_declaration: ARITHMETIC_ID ASIGN LBRACKET VAR RBRACKET • INTRO

    INTRO  desplazar e ir al estado 66


Estado 62

   13 array_assignment: ARRAY_ID LBRACKET VAR RBRACKET ASIGN • arithmetic_exp INTRO

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 67
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 63

   15 array_access: ARRAY_ID LBRACKET VAR RBRACKET INTRO •

    $default  reduce usando la regla 15 (array_access)


Estado 64

   14 array_assignment: ARRAY_ID LBRACKET ARITHMETIC_ID RBRACKET ASIGN • arithmetic_exp INTRO

    POPEN          desplazar e ir al estado 1
    TO_INT         desplazar e ir al estado 2
    TO_FLOAT       desplazar e ir al estado 3
    SUB            desplazar e ir al estado 4
    VAR            desplazar e ir al estado 5
    ARITHMETIC_ID  desplazar e ir al estado 21

    arithmetic_exp  ir al estado 68
    mul             ir al estado 18
    pow             ir al estado 19
    basic_exp       ir al estado 20


Estado 65

    7 instruction: setup DO INTRO instructions DONE • INTRO

    INTRO  desplazar e ir al estado 69


Estado 66

   12 array_declaration: ARITHMETIC_ID ASIGN LBRACKET VAR RBRACKET INTRO •

    $default  reduce usando la regla 12 (array_declaration)


Estado 67

   13 array_assignment: ARRAY_ID LBRACKET VAR RBRACKET ASIGN arithmetic_exp • INTRO
   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul

    ADD    desplazar e ir al estado 34
    SUB    desplazar e ir al estado 35
    INTRO  desplazar e ir al estado 70

    arithmetic_op1  ir al estado 37


Estado 68

   14 array_assignment: ARRAY_ID LBRACKET ARITHMETIC_ID RBRACKET ASIGN arithmetic_exp • INTRO
   17 arithmetic_exp: arithmetic_exp • arithmetic_op1 mul

    ADD    desplazar e ir al estado 34
    SUB    desplazar e ir al estado 35
    INTRO  desplazar e ir al estado 71

    arithmetic_op1  ir al estado 37


Estado 69

    7 instruction: setup DO INTRO instructions DONE INTRO •

    $default  reduce usando la regla 7 (instruction)


Estado 70

   13 array_assignment: ARRAY_ID LBRACKET VAR RBRACKET ASIGN arithmetic_exp INTRO •

    $default  reduce usando la regla 13 (array_assignment)


Estado 71

   14 array_assignment: ARRAY_ID LBRACKET ARITHMETIC_ID RBRACKET ASIGN arithmetic_exp INTRO •

    $default  reduce usando la regla 14 (array_assignment)
